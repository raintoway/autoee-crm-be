<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 日志存放路径 -->
    <property name="LOG_PATH" value="./logs"/>
    <!-- 日志文件名称前缀 -->
    <property name="APP_NAME" value="autoee-crm"/>
    <springProperty name="SERVER_PORT" scope="context" source="server.port" defaultValue="8069"/>
    <!--    <springProperty name="APP_NAME" scope="context" source="spring.application.name" defaultValue="voice-qc"/>-->
    <!--    <springProperty name="SERVER_IP" scope="context" source="spring.cloud.client.ip-address" defaultValue="0.0.0.0"/>-->
    <!-- 日志输出格式 %c{1} 只输出类名不带包路径  %class类名带包路径 -->
    <property name="FILE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %class.%M\\(%line\\) | %msg%n"/>
    <!-- 单个文件大小 -->
    <property name="LOG_MAX_FILE_SIZE" value="100MB"/>
    <!-- 日志保留天数 -->
    <property name="LOG_FILE_MAX_DAY" value="1000"/>
    <!-- 常规日志总大小上限 -->
    <property name="INFO_LOG_TOTAL_SIZE_CAP" scope="context" value="100GB"/>
    <!-- 错误日志总大小上限 -->
    <property name="ERROR_LOG_TOTAL_SIZE_CAP" scope="context" value="50GB"/>


    <!-- 日志输出格式  %c{1} 只输出类名不带包路径  %class类名带包路径 -->
    <property name="console.pattern" value="%d{HH:mm:ss.SSS}  [%thread] %-5level %class.%M\\(%line\\) | %msg%n
                %replace(%sql){\n}{ }%replace(%ex){\n}{ }"/>
    <property name="console.pattern" value="%d{HH:mm:ss.SSS}  [%thread] %-5level %class.%M\\(%line\\) | %msg%n"/>
    <!--    <property name="console.pattern" value="%d{HH:mm:ss.SSS} %-5level %M\\(%line\\) | %msg%n"/>-->
    <!--    <property name="console.pattern" value="%d{HH:mm:ss.SSS}  [%thread] %-5level %M\\(%line\\) | %msg%n"/>-->
    <!--    <property name="console.pattern" value="%d{HH:mm:ss.SSS} %-5level %c{1}.%M\\(%line\\) | %msg%n"/>-->
    <!-- 控制台输出 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${console.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <!--            <onMismatch>DENY</onMismatch>-->
        </filter>
    </appender>


    <!--输出到常规日志文件 -->
    <appender name="InfoFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-info.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-info-logs/${APP_NAME}-${SERVER_PORT}-info.%d{yyyy-MM-dd}.%04i.log</fileNamePattern>
            <!--日志保留时间,单位:天-->
            <maxHistory>${LOG_FILE_MAX_DAY}</maxHistory>
            <!--单个文件最大Size-->
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize>
            <!--日志文件上限大小，超过则自动删除旧文件-->
            <totalSizeCap>${INFO_LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <!-- 使用 ThresholdFilter：直接指定最低级别（INFO），自动包含更高优先级（WARN、ERROR） -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
        <!-- 只输出INFO级别的日志 -->
<!--        <filter class="ch.qos.logback.classic.filter.LevelFilter">-->
<!--            <level>INFO</level>-->
<!--            <onMatch>ACCEPT</onMatch>-->
<!--            <onMismatch>DENY</onMismatch>-->
<!--        </filter>-->
    </appender>

    <!--输出到Error日志文件 -->
    <appender name="ErrorInfoFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-error.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <!-- 基于时间的分包策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-error-logs/${APP_NAME}-${SERVER_PORT}-error.%d{yyyy-MM-dd}.%04i.log</fileNamePattern>
            <!--日志保留时间,单位:天-->
            <maxHistory>${LOG_FILE_MAX_DAY}</maxHistory>
            <!--单个文件最大Size-->
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize>
            <!--日志文件上限大小，超过则自动删除旧文件-->
            <totalSizeCap>${ERROR_LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- 慢SQL日志输出 -->
    <appender name="SlowSqlFileAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-slow-sql.log</file>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>UTF-8</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH}/${APP_NAME}-${SERVER_PORT}-slow-sql-logs/${APP_NAME}-${SERVER_PORT}-slow-sql.%d{yyyy-MM-dd}.%04i.log</fileNamePattern>
            <maxHistory>${LOG_FILE_MAX_DAY}</maxHistory>
            <maxFileSize>${LOG_MAX_FILE_SIZE}</maxFileSize>
            <totalSizeCap>${ERROR_LOG_TOTAL_SIZE_CAP}</totalSizeCap>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!--log4jdbc相关配置：jdbc.sqltiming输出sql执行时间，其他数据库连接、结果集等信息不输出-->
    <!--    <logger name="jdbc.sqltiming" level="INFO"/>-->
    <logger name="jdbc.sqltiming" level="INFO">
        <appender-ref ref="SlowSqlFileAppender"/>
    </logger>
    <logger name="com.alibaba.druid.filter.stat.StatFilter" level="INFO">
        <appender-ref ref="SlowSqlFileAppender"/>
    </logger>
    <!--    <logger name="jdbc.connection" level="OFF" addtivity="false"/>-->
    <!--    <logger name="jdbc.resultset" level="OFF" addtivity="false"/>-->
    <!--    <logger name="jdbc.resultsettable" level="OFF" addtivity="false"/>-->
    <!--    <logger name="jdbc.audit" level="OFF" addtivity="false"/>-->
    <!--    <logger name="jdbc.sqlonly" level="OFF" addtivity="false"/>-->

    <!-- 系统模块日志级别控制  -->
    <logger name="com.ruoyi" level="info"/>

    <!-- ShardingSphere日志级别控制 - 不输出sql日志  -->
    <logger name="ShardingSphere-SQL" level="WARN"/>

    <!-- Spring日志级别控制  -->
    <!--    <logger name="org.springframework" level="warn"/>-->
    <!--  Mybatis的日志输出控制在 mybatis-config.xml 中进行设置  -->
    <!--    <logger name="org.apache.ibatis" level="warn"/>-->

    <!--系统操作日志-->
    <root level="info">
        <appender-ref ref="console"/>
        <appender-ref ref="InfoFileAppender"/>
        <appender-ref ref="ErrorInfoFileAppender"/>
    </root>
</configuration>
